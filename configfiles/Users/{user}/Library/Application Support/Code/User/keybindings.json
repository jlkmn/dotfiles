[
  // Vim like navigation to jump between file explorer and eidtor
  {
    "key": "ctrl+h",
    "when": "!isInDiffEditor",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  // Vim like navigation to jump between sounrce control and diffEditor
  {
    "key": "ctrl+h",
    "when": "isInDiffEditor",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  // Vim like navigation for suggestions and quick open
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },

  // Tab navigation like in the browser
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },

  // Cmd + j to toggle maximized terminal window
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": ["workbench.action.toggleMaximizedPanel"]
    },
    "when": "!panelMaximized && !panelVisible && !sideBarVisible"
  },
  {
    "key": "cmd+j",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.toggleMaximizedPanel"
      ]
    },
    "when": "!panelMaximized && !panelVisible && sideBarVisible"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },

  // Easier file explorer actions
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": ["list.select", "workbench.action.toggleSidebarVisibility"]
    },
    "when": "listFocus && !inputFocus"
  },
  // Easier Emmet workflows
  {
    "key": "cmd+shift+a",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "shift+cmd+[",
    "when": "editorTextFocus",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "cmd+shift+2",
    "when": "editorTextFocus",
    "command": "editor.emmet.action.updateTag"
  },
  {
    "key": "alt+]",
    "command": "github.copilot.nextPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  },
  {
    "key": "alt+]",
    "command": "-github.copilot.nextPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  },
  {
    "key": "cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "git.stageSelectedRanges",
        "workbench.action.closeActiveEditor",
        "workbench.view.scm"
      ]
    },
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+a",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "git.stage",
        "workbench.action.closeActiveEditor",
        "workbench.view.scm"
      ]
    },
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "git.unstage",
        "workbench.action.closeActiveEditor",
        "workbench.view.scm"
      ]
    },
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "shift+cmd+c",
    "command": "git.commitStaged"
  }
]
